//------------------------------------------------------------------------------
// <auto-generated>
// This code was generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
//
// Changes to this file may cause incorrect behavior and will be lost when
// the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
#nullable enable
namespace WalkerTX.Ynab.SDK.Models.Components
{
    using Newtonsoft.Json;
    using System;
    using WalkerTX.Ynab.SDK.Utils;
    
    /// <summary>
    /// The scheduled transaction frequency
    /// </summary>
    public enum ScheduledTransactionFrequency
    {
        [JsonProperty("never")]
        Never,
        [JsonProperty("daily")]
        Daily,
        [JsonProperty("weekly")]
        Weekly,
        [JsonProperty("everyOtherWeek")]
        EveryOtherWeek,
        [JsonProperty("twiceAMonth")]
        TwiceAMonth,
        [JsonProperty("every4Weeks")]
        Every4Weeks,
        [JsonProperty("monthly")]
        Monthly,
        [JsonProperty("everyOtherMonth")]
        EveryOtherMonth,
        [JsonProperty("every3Months")]
        Every3Months,
        [JsonProperty("every4Months")]
        Every4Months,
        [JsonProperty("twiceAYear")]
        TwiceAYear,
        [JsonProperty("yearly")]
        Yearly,
        [JsonProperty("everyOtherYear")]
        EveryOtherYear,
    }

    public static class ScheduledTransactionFrequencyExtension
    {
        public static string Value(this ScheduledTransactionFrequency value)
        {
            return ((JsonPropertyAttribute)value.GetType().GetMember(value.ToString())[0].GetCustomAttributes(typeof(JsonPropertyAttribute), false)[0]).PropertyName ?? value.ToString();
        }

        public static ScheduledTransactionFrequency ToEnum(this string value)
        {
            foreach(var field in typeof(ScheduledTransactionFrequency).GetFields())
            {
                var attributes = field.GetCustomAttributes(typeof(JsonPropertyAttribute), false);
                if (attributes.Length == 0)
                {
                    continue;
                }

                var attribute = attributes[0] as JsonPropertyAttribute;
                if (attribute != null && attribute.PropertyName == value)
                {
                    var enumVal = field.GetValue(null);

                    if (enumVal is ScheduledTransactionFrequency)
                    {
                        return (ScheduledTransactionFrequency)enumVal;
                    }
                }
            }

            throw new Exception($"Unknown value {value} for enum ScheduledTransactionFrequency");
        }
    }

}