//------------------------------------------------------------------------------
// <auto-generated>
// This code was generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
//
// Changes to this file may cause incorrect behavior and will be lost when
// the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
#nullable enable
namespace WalkerTX.Ynab.SDK
{
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using WalkerTX.Ynab.SDK.Hooks;
    using WalkerTX.Ynab.SDK.Models.Components;
    using WalkerTX.Ynab.SDK.Utils;
    using WalkerTX.Ynab.SDK.Utils.Retries;

    public struct SDKConfig
    {
        /// <summary>
        /// List of server URLs available to the SDK.
        /// </summary>
        public static readonly string[] ServerList = {
            "https://api.ynab.com/v1",
            "https://staging.api.ynab.com/v1",
        };

        public IYnabHttpClient Client;
        public string ServerUrl;
        public int ServerIndex;
        public string UserAgent;
        public Func<WalkerTX.Ynab.SDK.Models.Components.Security>? SecuritySource;
        public SDKHooks Hooks;
        public RetryConfig? RetryConfig;

        /// <summary>
        /// Initializes a new instance of the SDKConfig struct with default values.
        /// </summary>
        public SDKConfig(IYnabHttpClient? client = null)
        {
            Client = client ?? new YnabHttpClient();
            ServerUrl = "";
            ServerIndex = 0;
            UserAgent = "speakeasy-sdk/csharp 0.1.1 2.723.11 1.77.0 WalkerTX.Ynab.SDK";
            SecuritySource = null;
            Hooks = new SDKHooks();
            RetryConfig = null;
        }

        public string GetTemplatedServerUrl()
        {
            if (!String.IsNullOrEmpty(this.ServerUrl))
            {
                return Utilities.TemplateUrl(Utilities.RemoveSuffix(this.ServerUrl, "/"), new Dictionary<string, string>());
            }
            return Utilities.TemplateUrl(SDKConfig.ServerList[this.ServerIndex], new Dictionary<string, string>());
        }
    }
}